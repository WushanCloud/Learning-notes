

//八皇后问题
#if 0
#include <iostream>
using namespace std;

#define N 8
int sum = 1;
void print(int(*arr)[N])
{
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			cout << arr[i][j] << " ";
		}
		cout << endl;
	}
	cout << endl;
}
//n:当前行	j:当前列
int panduan(int(*brr)[N], int n, int j)
{
	//判断其正上方
	for (int i = 0; i < n; i++)
	{
		if (brr[i][j] == 1)
			return 0;
	}
	//判断左上正对角线
	for (int i = 1; (n - i) >= 0 && (j - i) >= 0; i++)//行
	{
		if (brr[n-i][j-i] == 1)
		{
			return 0;
		}
	}
	//判断右上对象线
	for (int i = 1; (n - i) >= 0 && (j + i) < N; i++)
	{
		if (brr[n-i][j+i] == 1)
		{
			return 0;
		}
	}
	return 1;
}
//arr:存储数组	n:当前处理行数
void eight(int (*arr)[N],int n)
{
	//判断是否放满
	if (n == N)
	{
		cout << "第" << sum++ << "种" << endl;
		print(arr);
	}
	else//开始放入
	{
		for (int j = 0; j < N; j++)//列
		{
			arr[n][j] = 1;
			if (panduan(arr, n, j) == 1)
			{
				//当前行插入正确，进入下一行
				eight(arr, n + 1);
			}
			arr[n][j] = 0;
		}
	}
}

int main()
{
	int arr[N][N] = { 0 };
	//处理赋值
	eight(arr, 0);
	return 0;
}

#endif // 1
